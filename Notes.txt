** Assuming FAST MODE operation

Each page is 64 Bytes - 256 Pages = 16,384 Bytes total
In Fast Mode, each page can be directly written or erased

Read requires no keys
Write/Erase requires unlcoking into normal mode, then Fast Mode

FLASH_KEYR -> RDPRT    0x000000A5
              KEY1     0x45670123
			  KEY2     0xCDEF89AB

Unlock
*******************************************************************************
Check FLASH_CTLR->LOCK - if 1, perform the unlock procedure
	-> Write KEY1, **THEN** KEY2 to FLASH_KEYR

Wait for FLASH_STATR->BSY to be 0

Check FLASH_CTLR->FLOCK - if 1, perform flast unlock procedure
	-> Write KEY1, **THEN** KEY2 to FLASH_MODEKEYR


Read
*******************************************************************************
No special requirments, read 16 Bytes of Flash into buffer


Write
*******************************************************************************
Write FLASH_CTLR->PAGE_PG to ensure FAST MODE
Write FLASH_CTLR->BUFRST to reset the internal buffer

Wait for FLASH_STATR->BSY to be 0
Set FLASH_START->EOP to 0

-- 16 Operation Loop
	Write 32-bit value to flash page addr
	Set FLASH_CTLR->BUF_LOAD and FLASH_CTLR->PAGE_PG to ensure FAST MODE
	Wait for FLASH_STATR->BSY to be 0
--

Write the address to FLASH_ADDR

Write FLASH_CTLR->STAT to 1
Wait for FLASH_STATR->BSY to be 0

Check FLASH_STATR to make sure no errors occurred


// Clear buffer first
FLASH->CTLR = CR_PAGE_PG;
FLASH->CTLR = CR_PAGE_PG | CR_BUF_RST;
while (FLASH->STATR & FLASH_STATR_BSY); // or wait for EOP

// Load buffer 16 words
for (int i = 0; i < 16; ++i) {
    ptr[i] = data[i]; // write to alias region
    FLASH->CTLR = CR_PAGE_PG | FLASH_CTLR_BUF_LOAD;
    while (FLASH->STATR & FLASH_STATR_BSY); // or wait for EOP
}

// Set address AFTER buffer is fully loaded
FLASH->ADDR = (intptr_t)ptr;

// Trigger programming
FLASH->CTLR = CR_PAGE_PG | CR_STRT_Set;
while (FLASH->STATR & FLASH_STATR_BSY);



Erase
*******************************************************************************
Write FLASH_CTLR->PAGE_ER to signal an erase

Write the address to FLASH_ADDR

Write FLASH_CTLR->STAT to 1 to initiate an erase

Wait for FLASH_CTLR->BSY to be 0

Check FLASH_STATR for errors

FLASH->CTLR = CR_PAGE_ER;
FLASH->ADDR = (intptr_t)ptr;
FLASH->CTLR = CR_STRT_Set | CR_PAGE_ER;
